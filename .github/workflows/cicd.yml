name: CICD

on:
  push:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"
      - uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm install
      - run: npm run lint
      - run: npm run check
  build:
    runs-on: ubuntu-latest
    needs: quality-checks
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"
      - uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm install
      - run: npm run build
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"
      - uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm install
      - run: npm run test
  release:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: "Bump Version & Create Tag"
        id: "bump-version"
        uses: "phips28/gh-action-bump-version@master"
        with:
          tag-prefix: "v"
      - name: "Create Release"
        uses: "softprops/action-gh-release@v1"
        with:
          tag_name: ${{ steps.bump-version.outputs.newTag }}
          draft: false
          prerelease: false
          generate_release_notes: true
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"
      - run: npm ci
      - run: npm publish --provenance --access public
  publish-storybook:
    needs: release
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"
      - uses: bitovi/github-actions-storybook-to-github-pages@v1.0.3
        with:
          install_command: npm install
          path: storybook-static
          checkout: false
        env:
          GH_TOKEN: "${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}"
