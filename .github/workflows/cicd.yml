name: CICD

on:
  push:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"
      - uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm install
      - run: npm run lint
      - run: npm run check
  build:
    runs-on: ubuntu-latest
    needs: quality-checks
    if: github.ref != 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"
      - uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm install
      - run: npm run build
  test:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"
      - uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm install
      - run: npm run test
  create-release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"
      - name: "Bump Version & Create Tag"
        id: "bump-version"
        uses: "phips28/gh-action-bump-version@master"
        with:
          tag-prefix: "v"
      # - name: "Create Release"
      #   id: "create-release"
      #   uses: "softprops/action-gh-release@v1"
      #   with:
      #     tag_name: ${{ steps.bump-version.outputs.newTag }}
      #     body: "Release ${{ steps.bump-version.outputs.newTag }}"
      #     draft: false
      #     prerelease: false
      #     generate_release_notes: true
      # - run: echo "${{ steps.create-release.outputs.url }}"
      - run: gh release create ${{ steps.bump-version.outputs.newTag }} --generate-notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
